{"version":3,"file":"marionettist.js","sources":["../src/core.coffee","../src/env.coffee","../src/channels.coffee","../src/location.coffee","../src/config/templates.coffee","../src/config.coffee","../src/mixins/renderer.coffee","../src/utils.coffee","../src/logger.coffee","../src/route.coffee","../src/router.coffee","../src/region.coffee","../src/views.coffee","../src/views/base.coffee","../src/views/collection.coffee","../src/entities/models/base.coffee","../src/entities/models/associated.coffee","../src/entities/collections/base.coffee","../src/entities/responders/base.coffee","../src/entities/view-models/base.coffee","../src/controllers/base.coffee","../src/application.coffee","../src/module.coffee","../src/marionettist.coffee"],"sourcesContent":["import _ from \"underscore\"\nimport s from \"underscore.string\"\nimport $ from \"jquery\"\nimport Backbone from \"backbone\"\nimport backbone_radio from \"backbone.radio\"\nimport backboneAssociations from \"backbone-associations\"\nimport Marionette from \"backbone.marionette\"\nimport MarionetteToolkit from \"marionette.toolkit\"\nimport i18next from \"i18next\"\nimport numeral from \"numeral\"\nimport moment from \"moment\"\nimport momentRange from \"moment-range\"\nimport momentTimezone from \"moment-timezone\"\n\n\n\n\nMarionettist = Marionette.extend()\n\nMarionettist.Backbone = Backbone\n\nMarionettist.Backbone.Radio = backbone_radio\n\nMarionettist.Marionette = Marionette\n\nMarionettist._ = _\n\nMarionettist.$ = $\n\nMarionettist.s = s\n\nMarionettist.I18n = i18next\n\nMarionettist.numeral = numeral\n\nMarionettist.moment = moment\n\nexport default Marionettist\n","import Marionettist from \"./core.coffee\"\nclass Env extends Marionettist.Object\n\n  constructor: ()->\n    @stage = \"development\"\n\n  isDevelopment: ->\n    @stage == \"development\"\n\n  isProduction: ->\n    @stage == \"production\"\n\n  getLocale: ()->\n    Marionettist.I18n.language\n\n  setStage: (stage)->\n    oldState = @stage\n    @stage = stage\n    @triggerMethod \"change:stage\", oldState, stage\n\n  getStage: ()->\n    @stage\n\n\n  setLocale: (locale = \"en\", callback = null)->\n    oldLocale = @getLocale()\n    Marionettist.I18n.changeLanguage locale, (t) ->\n      Marionettist.channels.publish \"marionettist\", \"change:locale\",\n        currentLocale: locale\n        oldLocale: oldLocale\n\n      callback(t) if Marionettist._.isFunction(callback)\nexport default Env\n","import Marionettist from \"./core.coffee\"\nclass Channels extends Marionettist.Object\n\n  constructor: ()->\n\n  request: (channelName = \"global\", eventName = \"\", data={})->\n    return Marionettist.Backbone.Radio.channel(channelName).request(eventName,data)\n\n  replyOnce: (channelName = \"global\", eventName = \"\", callback)->\n    channel = Marionettist.Backbone.Radio.channel(channelName)\n    if Marionettist._.isFunction(callback)\n      return channel.replyOnce(eventName, callback)\n    else\n      return channel.replyOnce(callback)\n\n  reply: (channelName = \"global\", eventName = \"\", callback)->\n    channel = Marionettist.Backbone.Radio.channel(channelName)\n    if Marionettist._.isFunction(callback)\n      return channel.reply(eventName, callback)\n    else\n      return channel.reply(callback)\n\n  publish: (channelName = \"global\", eventName = \"\", data ={})->\n    return Marionettist.Backbone.Radio.channel(channelName).trigger eventName, data\n\n  subscribe: (channelName = \"global\", eventName = \"\", callback)->\n    return Marionettist.Backbone.Radio.channel(channelName).on eventName, callback\n\nexport default Channels\n","import Marionettist from \"./core.coffee\"\nclass Location extends Marionettist.Object\n\n  constructor: ()->\n\n  refreshRoute: (fragment = @getCurrentRoute())->\n    Marionettist.Backbone.history.loadUrl(fragment)\n\n  navigateTo: (route, options = {}) ->\n    Marionettist.Backbone.history.navigate route, options\n\n  getCurrentRoute: ->\n    frag = Marionettist.Backbone.history.fragment\n    if Marionettist._.isEmpty(frag) then null else frag\n\n  startHistory: (options= {})->\n    if Marionettist.Backbone.history?\n      Marionettist.Backbone.history.start(options)\n\nexport default Location\n","import Marionettist from \"../core.coffee\"\nclass Templates\n\n  debug: false\n\n  lookupPaths: []\n\n  engine: ->\n    engine = {}\n    if HAML?\n      engine = HAML\n    if JST?\n      engine = JST\n    return engine\n\n  render: (templateName = \"\", data = {} , options = {})->\n    template = \"\"\n    engine = @engine\n    engine = engine() if Marionettist._.isFunction(templateName)\n    if options.defaultTemplate?\n      template = options.defaultTemplate\n    if engine? and Marionettist._.isFunction(engine[templateName])\n      template = engine[templateName](data)\n    return template\n\nexport default Templates\n","import Templates from \"./config/templates.coffee\"\nimport Marionettist from \"./core.coffee\"\nclass Config extends Marionettist.Object\n\n  constructor: ()->\n    @templates = new Templates()\n\n\nexport default Config\n","Renderer =\n\n  render: (template, data) ->\n    if Marionettist._.isFunction(template)\n      return template(data)\n    else\n      return if template is false\n      engineTemplate = @getTemplate(template)\n      throw \"Template #{template} was not found!\" unless Marionettist._.isFunction(engineTemplate)\n      engineTemplate(data)\n\n  getTemplate: (template) ->\n    lookups = Marionettist.config.templates.lookupPaths\n    lookups = lookups() if Marionettist._.isFunction(lookups)\n    throw \"lookupPaths most be an array\" unless Marionettist._.isArray(lookups)\n    templates = [template]\n    lookups = [\"\"] if lookups.length == 0\n    for lookup in lookups\n      ## inserts the template at the '-1' position of the template array\n      ## this allows to omit the word 'templates' from the view but still\n      ## store the templates in a directory outside of the view\n      ## example: \"users/list/layout\" will become \"users/list/templates/layout\"\n\n      for path in templates\n        lookupPath = @findLookupPath(lookup+path, template)\n        return lookupPath if lookupPath?\n\n  findLookupPath: (path,template)->\n    engine = Marionettist.config.templates.engine\n    engine = engine() if Marionettist._.isFunction(engine)\n    lookupPath = engine[path]\n    if Marionettist.config.templates.debug is true\n      Marionettist.logger.info \"Looking template: #{template} in '#{path}'\"\n    return lookupPath if lookupPath\n\n  withTemplate: (string) ->\n    if string?\n      array = string.split(\"/\")\n      array.splice(-1, 0, \"templates\")\n      array.join(\"/\")\n\nexport default Renderer\n","import Marionettist from \"./core.coffee\"\nclass Utils extends Marionettist.Object\n\n  getValue: (value, context, params) ->\n    if Marionettist._.isFunction(value)\n      value = if params then value.apply(context, params) else value.call(context)\n    value\n\n  pathFor: (_path)->\n    path = \"\"\n    path = \"##{_path}\"\n    path\n\n  waitFor: (promises, options = {}) ->\n    switch\n      when options.promiseType is \"bluebird\"\n        @_waitForBluebird(promises, options)\n      else\n        @_waitForAjax(promises, options)\n\n  _waitForAjax: (ajaxRequests=[], options = {}) ->\n    xhrs = []\n    xhrs= Marionettist._.chain([ajaxRequests]).flatten().value()\n    if xhrs.length > 0\n      Marionettist.$.when(xhrs...).then ((args...)->\n        options.success(args...) if Marionettist._.isFunction(options.success)\n        ), (args...)->\n          options.error(args...) if Marionettist._.isFunction(options.error)\n    else\n      options.success(null) if Marionettist._.isFunction(options.success)\n\n  _waitForBluebird: (promises, options = {})->\n    promises = Marionettist._.chain([promises]).flatten().value()\n    if promises.length > 0\n      Promise.all(promises.map((promise) ->\n        promise.reflect()\n      )).then (inspections) ->\n\n        successArgs = []\n        errors = []\n        for inspection in inspections\n          if inspection.isFulfilled()\n            successArgs.push inspection.value()\n          else\n            errors.push inspection.reason()\n        if errors.length > 0\n          options.error(errors...) if Marionettist._.isFunction(options.error)\n        else\n          options.success(successArgs...) if Marionettist._.isFunction(options.success)\n    else\n      options.success(null) if Marionettist._.isFunction(options.success)\n\nexport default Utils\n","import Marionettist from \"./core.coffee\"\nclass Logger extends Marionettist.Object\n\n  constructor: ()->\n\n  success: (msg, options = {})->\n    options.type = \"success\"\n    @log(msg,options)\n\n  warn: (msg, options = {})->\n    options.type = \"warn\"\n    @log(msg,options)\n\n  error: (msg, options = {})->\n    options.type = \"error\"\n    @log(msg,options)\n\n  info: (msg, options = {})->\n    options.type = \"info\"\n    @log(msg,options)\n\n  log: (msg, options = {}) ->\n    force = options.force\n    type = options.type\n    if Marionettist.env.isDevelopment() or force is true\n      type = type or 'black'\n      bgc = 'White'\n      switch type\n        when 'success'\n          type = 'Green'\n          bgc = 'LimeGreen'\n        when 'info'\n          type = 'DodgerBlue'\n          bgc = 'Turquoise'\n        when 'error'\n          type = 'Red'\n          bgc = 'Black'\n        when 'start'\n          type = 'OliveDrab'\n          bgc = 'PaleGreen'\n        when 'warning'\n          type = 'Tomato'\n          bgc = 'Black'\n        when 'end'\n          type = 'Orchid'\n          bgc = 'MediumVioletRed'\n        else\n          type = type\n      bgc = 'White'\n      if typeof msg == 'object'\n        console.log msg\n      else\n        console.log '%c' + msg, 'type:' + type + ';font-weight:bold; background-type: ' + bgc + ';'\n    return\n\n\nexport default Logger\n","import Marionettist from \"./core.coffee\"\n\nclass AppRoute extends Marionettist.Object\n\n  router: ()->\n    @getOption(\"router\")\n\n  path: ()->\n    @getOption(\"path\")\n\n  actionName: ()->\n    @getOption(\"actionName\")\n\n  controller: ()->\n    @getOption(\"controller\")\n\nexport default AppRoute\n","import Marionettist from \"./core.coffee\"\n\nclass AppRouter extends Marionettist.AppRouter\n\n  onRoute: (name, path, args) ->\n    if @controller? and Marionettist._.isFunction(@controller.onRoute)\n      @controller.onRoute(@, name, path, args)\n\n  _setControllerFilters: (controller)->\n    if controller?\n      defaultFilters =\n        before: {}\n        after: {}\n      filters = controller.filters\n      filters = filters() if Marionettist._.isFunction(filters)\n      controller.filters = {} unless controller.filters?\n      controller.filters = Marionettist._.extend(defaultFilters, filters)\n    controller\n\n\n\n  _addAppRoute: (controller, route, methodName) ->\n    @controller = @_setControllerFilters(controller)\n    _method = controller[methodName]\n\n    method = (args)=>\n      @controller.route = new Marionettist.AppRoute\n        controller: @controller\n        actionName: methodName\n        path: route\n      result = @_executeFilter @controller.filters.before, @controller\n      if result != false\n        @controller[methodName].apply(@controller, @_getParams())\n        @_executeFilter @controller.filters.after, @controller\n\n\n    throw new Marionettist.Marionette.Error('Method \"' + methodName + '\" was not found on the controller') if !method\n    @route(route, methodName, Marionettist._.bind(method, controller))\n\n\n  _executeFilter: (filter, controller)->\n    result = true\n    for methodName in Marionettist._.keys(filter)\n      filterValue = filter[methodName]\n      stopMsg = \"Action halted by filter '#{methodName}'\"\n      switch\n        when Marionettist._.isFunction(filterValue)\n          result = filterValue(controller)\n          if result == false\n            console?.warn stopMsg\n            break\n        when Marionettist._.isObject(filterValue)\n          result = @_proccessFilterObject(methodName,filterValue, controller)\n          if result == false\n            console?.warn stopMsg\n            break\n    result\n\n  _getParams: ()->\n    route = @_routeToRegExp(@controller.route.getOption(\"path\"))\n    params = @_extractParameters(route, Marionettist.Backbone.history.getFragment())\n\n  _proccessFilterObject: (methodName,filter, controller)->\n    defaultFilterOptions =\n      method: null\n      only: []\n      except: []\n    filterOptions = Marionettist._.extend(defaultFilterOptions, filter)\n    controllerMethod = controller[methodName]\n    actionName = controller.route.actionName()\n\n    throw \"filter option only, most be an array\" unless Marionettist._.isArray(filterOptions.only)\n    throw \"filter option except, most be an array\" unless Marionettist._.isArray(filterOptions.except)\n\n    if filterOptions.only.length > 0 or filterOptions.except.length > 0\n      if Marionettist._.contains(filterOptions.only, actionName) and !Marionettist._.contains(filterOptions.except, actionName)\n        controllerMethod.apply(@controller, @_getParams()) if Marionettist._.isFunction(controllerMethod)\n    else\n      controllerMethod.apply(@controller, @_getParams()) if Marionettist._.isFunction(controllerMethod)\n\nexport default AppRouter\n","import Marionettist from \"./core.coffee\"\nimport Marionette from \"backbone.marionette\"\n\n_show = Marionette.Region.prototype.show\n\nclass Region extends Marionette.Region\n\n  show: (view, options)->\n    options = options || {}\n    preventDestroy = options.preventDestroy is true\n    transitionOut = options.transitionOut\n    delete options.transitionOut\n    args = [view, options]\n    if transitionOut == false\n      _show.apply(@,  args)\n    else\n      oldView = @currentView\n      showCurrentView = =>\n        _show.apply(@,  args)\n      if oldView? and Marionettist._.isFunction(oldView.transitionOut)\n        oldView.triggerMethod(\"before:transition:out\")\n        value = oldView.transitionOut()\n        if value?.then?\n          value.then ()=>\n            showCurrentView()\n        else\n          throw \"transitionOut method most return a promise\"\n      else\n        showCurrentView()\n\nexport default Region\n","import Marionettist from \"./core.coffee\"\nclass Views extends Marionettist.Object\n\n  templateHelpers:\n\n    pathFor: (args...)->\n      Marionettist.utils.pathFor(args...)\n\n    _: Marionettist._\n\n    s: Marionettist.s\n\n    t: (args...)->\n      Marionettist.I18n.t(args...)\n\n    Mnt: Marionettist\n\n    formatCurrency: (amount, format = \"$0,0.00\")->\n      Marionettist.numeral(amount).format(format)\n\n    formatNumber: (amount, format = \"0,0.00\")->\n      Marionettist.numeral(amount).format(format)\n\n    formatPercentage: (amount, format = \"0.00%\")->\n      Marionettist.numeral(amount).format(format)\n\n    formatDate: (date, format = \"DD-MM-YYYY\")->\n      Marionettist.moment(date).format(format)\n\n\nexport default Views\n","import Marionettist from \"../core.coffee\"\nimport Marionette from \"backbone.marionette\"\nclass BaseView extends Marionette.View\n\n\n\nexport default BaseView\n","import Marionettist from \"../core.coffee\"\nimport Marionette from \"backbone.marionette\"\nclass CollectionView extends Marionette.CollectionView\n\n\n\nexport default CollectionView\n","import Marionettist from \"../../core.coffee\"\nimport Backbone from \"backbone\"\nclass Base extends Backbone.Model\n\n  urlRoot: \"\"\n\n  urlPath: \"\"\n\n  headers: ->\n    return {\n    }\n\n  url: ->\n    if @isNew()\n      \"#{@urlRoot}/#{@urlPath}\"\n    else\n      \"#{@urlRoot}/#{@urlPath}/#{@get(\"id\")}\"\n\n  remoteKey: \"data\"\n\n  _setAttr:  (attributes, options)->\n    # BUG FIX for fetch a model nested\n    options.parse = false if options?\n    super(attributes, options)\n\n  sync: (method, model, options)->\n    options.contentType = \"application/json\" if !options.contentType?\n    options.headers = Marionettist.utils.getValue(@headers) if !options.headers?\n    options.dataType = \"json\"\n    if options.data? and options.data instanceof FormData\n      options.method = \"POST\"\n      options.contentType = false\n      options.processData = false\n      httpVerb = \"POST\"\n      httpVerb = \"PUT\" if method is \"update\"\n      httpVerb = \"DELETE\" if method is \"delete\"\n      options.data.append(\"_method\", httpVerb)\n\n    if (method is \"create\" or method is \"update\" or method is \"delete\") and !options.attrs?\n      if @remoteKey?\n        attrs = {}\n        attrs[@remoteKey] = @toJSON()\n      else\n        attrs = @toJSON()\n      attrs = options.data if options.data? and options.data instanceof FormData\n      options.attrs = attrs\n    super(method, model, options)\n\n  parse: (response, options)->\n    data = response\n    data = data[@remoteKey] if (@remoteKey? and !@collection) or (@remoteKey? and options.forceRemoteKey?)\n    return data\n\n\nexport default Base\n","import Marionettist from \"../../core.coffee\"\nAssociated = undefined\nif Marionettist.Backbone.AssociatedModel\n  class Associated extends Marionettist.Backbone.AssociatedModel\n    urlRoot: \"\"\n\n    urlPath: \"\"\n\n    headers: ->\n      return {\n      }\n\n    url: ->\n      if @isNew()\n        \"#{@urlRoot}/#{@urlPath}\"\n      else\n        \"#{@urlRoot}/#{@urlPath}/#{@get(\"id\")}\"\n\n    remoteKey: \"data\"\n\n    _setAttr:  (attributes, options)->\n      # BUG FIX for fetch a model nested\n      options.parse = false if options?\n      super(attributes, options)\n\n    sync: (method, model, options)->\n      options.contentType = \"application/json\" if !options.contentType?\n      options.headers = Marionettist.utils.getValue(@headers) if !options.headers?\n      options.dataType = \"json\"\n      if options.data? and options.data instanceof FormData\n        options.method = \"POST\"\n        options.contentType = false\n        options.processData = false\n        httpVerb = \"POST\"\n        httpVerb = \"PUT\" if method is \"update\"\n        httpVerb = \"DELETE\" if method is \"delete\"\n        options.data.append(\"_method\", httpVerb)\n\n      if (method is \"create\" or method is \"update\" or method is \"delete\") and !options.attrs?\n        if @remoteKey?\n          attrs = {}\n          attrs[@remoteKey] = @toJSON()\n        else\n          attrs = @toJSON()\n        attrs = options.data if options.data? and options.data instanceof FormData\n        options.attrs = attrs\n      super(method, model, options)\n\n    parse: (response, options)->\n      data = response\n      data = data[@remoteKey] if (@remoteKey? and !@collection) or (@remoteKey? and options.forceRemoteKey?)\n      return data\n\n\nexport default Associated\n","import Marionettist from \"../../core.coffee\"\nimport Backbone from \"backbone\"\nclass Base extends Backbone.Collection\n\n  remoteKey: \"data\"\n\n  urlRoot: \"\"\n\n  headers: ->\n    return {\n    }\n\n  url: ->\n    \"#{@urlRoot}/#{@urlPath}\"\n\n  sync: (method, model, options)->\n    options.contentType = \"application/json\" if !options.contentType?\n    options.headers = Marionettist.utils.getValue(@headers) if !options.headers?\n    super(method, model, options)\n\n  parse: (response, options)->\n    data = response\n    data = data[@remoteKey] if @remoteKey?\n    @meta = response.meta if response.meta?\n    return data\n\n\nexport default Base\n","import Marionettist from \"../../core.coffee\"\nimport ModelBase from \"../../entities/models/base.coffee\"\nimport BaseView from \"../../views/base.coffee\"\nclass Base extends ModelBase\n\n  constructor: (options = {})->\n    super options\n    # Registers our controller with the application so we can see the currently defined controller objects\n    # Helps us detect memory leaks\n    @_instance_id = Marionettist._.uniqueId(\"responder\")\n    @register @, @_instance_id\n\n\n\n  loaderView: BaseView.extend\n    template: (data)->\n      return Marionettist.config.templates.render \"marionettist/loader\", data,\n        defaultTemplate: '''\n         <div class='mri-loader'>\n           <div class='mri-loader__content'>\n             <i class=\"fa fa-spinner fa-spin fa-2x fa-fw\"></i>\n             <span class=\"sr-only\">Loading...</span>\n           </div>\n         </div>\n       '''\n\n\n  getLoaderView: ->\n    @set(loaderView: new @loaderView) if not @get(\"loaderView\")?\n    return @get(\"loaderView\")\n\n\n  close: (args...) ->\n    super args\n    @unregister @, @_instance_id\n\n  # Renders the view in the selected region and binds to view's close event\n  show: (view, options = {}) ->\n    fetchOptions = {}\n    fetchOptions = options.fetch if Marionettist._.isObject(options) and  Marionettist._.isObject(options.fetch)\n    region =\n      if options.region?\n        options.region\n      else\n        @get(\"region\")\n    @listenTo view, \"close\", @close\n    if options.async?\n      if options.loaderView isnt false\n        loaderView = @getLoaderView()\n        @listenTo loaderView, \"close\", @close\n        region.show loaderView\n      @fetch(fetchOptions).then (()=>\n        if options.loaderView isnt false\n          return view.close() if region.currentView isnt loaderView\n        region.show view\n      ), ()->\n\n    else\n      region.show view\n\n  defaults:\n    params: {}\n    async: []\n\n  waitFor: (args...)->\n    Marionettist.utils.waitFor args...\n\n  deferred: ()->\n    return Marionettist.$.Deferred()\n\n  fetch: (options = {})->\n    deferred = @deferred()\n    asyncFetches = Marionettist._.chain([@get(\"async\")]).flatten().compact().value()\n    @waitFor asyncFetches,\n      success: ->\n        options.success() if Marionettist._.isFunction(options.success)\n        deferred.resolve()\n      error: ->\n        options.error() if Marionettist._.isFunction(options.error)\n        deferred.reject()\n\n    return deferred.promise()\n\n  save: ()->\n    @deferred().promise()\n\n  destroy: ()->\n    @deferred().promise()\n\n  register: (instance, id) ->\n    @_registry ?= {}\n    @_registry[id] = instance\n\n  unregister: (instance, id) ->\n    delete @_registry[id]\n\n  resetRegistry: ->\n    oldCount = @getRegistrySize()\n    for key, responder of @_registry\n      responder.region.close()\n    msg = \"There were #{oldCount} responders in the registry, there are now #{@getRegistrySize()}\"\n    if @getRegistrySize() > 0 then console.warn(msg, @_registry) else console.log(msg)\n\n  getRegistrySize: ->\n    Marionettist._.size @_registry\n\n\nexport default Base\n","import Marionettist from \"../../core.coffee\"\nimport Backbone from \"backbone\"\nimport BaseModel from \"../../entities/models/base.coffee\"\nimport BaseCollection from \"../../entities/collections/base.coffee\"\nimport BaseResponder from \"../../entities/responders/base.coffee\"\nclass Base extends Backbone.Model\n\n  responders:()->\n    base: BaseResponder\n\n  models: ()->\n    base: BaseModel\n\n  collections: ()->\n    base: BaseCollection\n\n  views: ()->\n    {}\n\n  getResponder: (responderName, options = {})->\n    return @getResource(\"responders\",responderName, options)\n\n  getView: (viewName, options = {})->\n    return @getResource(\"views\",viewName, options)\n\n  getModel: (modelName, options = {})->\n    return @getResource(\"models\",modelName, options)\n\n  getCollection: (collectionName, models = [], options = {})->\n    return @getResource(\"collections\",collectionName, options, models)\n\n  getResource: (resourcesName,resourceName, options = {}, models)->\n    resource = null\n    resources = @[resourcesName]\n    resources = resources() if Marionettist._.isFunction(resources)\n    options.viewModel = @ if not options.viewModel?\n    if Marionettist._.isObject(resources) and resources[resourceName]?\n      if models?\n        resource = new resources[resourceName](models, options)\n      else\n        resource = new resources[resourceName](options)\n    return resource\n\nexport default Base\n","import Marionettist from \"../core.coffee\"\n\nclass Base extends Marionettist.Object\n\n  navigateTo: (route, options = {}) ->\n    Marionettist.location.navigateTo route, options\n\n  getCurrentRoute: ->\n    Marionettist.location.getCurrentRoute()\n\n\nexport default Base\n","import Marionettist from \"./core.coffee\"\n\nclass Application extends Marionettist.Marionette.Toolkit.App\n\n  Controllers: new Marionettist.Object()\n\n  Entities: new Marionettist.Object()\n\n  Views: new Marionettist.Object()\n\n  _isRunning: false\n\n  _isDestroyed: false\n\n  preventDestroy: false\n\n  startAfterInitialized: false\n\n  startWithParent: false\n\n  stopWithParent: true\n\n  constructor: (options)->\n    @resources = []\n    super(options)\n\n  startHistory: (options= {})->\n    Marionettist.location.startHistory(options) if not Marionettist.Backbone.History.started\n\n  start: (options) ->\n    @triggerMethod \"before:resources:fetch\", options\n    @resources = [] if not @resources?\n    Marionettist.utils.waitFor @resources,\n      success: =>\n        super(options)\n        @triggerMethod \"resources:fetch:success\"\n        @triggerMethod \"ready\"\n      error: =>\n        @triggerMethod \"resources:fetch:error\"\n\n\n\n\n\n\n\nexport default Application\n","import Marionettist from \"./core.coffee\"\n\nModule = Marionettist.Object.extend Marionettist.Backbone.Radio.Requests\n\n\n\n\nexport default Module\n","import Marionettist from \"./core.coffee\"\nimport Env from \"./env.coffee\"\nimport Channels from \"./channels.coffee\"\nimport Location from \"./location.coffee\"\nimport Config from \"./config.coffee\"\nimport Renderer from \"./mixins/renderer.coffee\"\nimport Utils from \"./utils.coffee\"\nimport Logger from \"./logger.coffee\"\nimport AppRoute from \"./route.coffee\"\nimport AppRouter from \"./router.coffee\"\nimport Region from \"./region.coffee\"\nimport Views from \"./views.coffee\"\nimport BaseView from \"./views/base.coffee\"\nimport CollectionView from \"./views/collection.coffee\"\nimport BaseModel from \"./entities/models/base.coffee\"\nimport BaseAssociatedModel from \"./entities/models/associated.coffee\"\nimport BaseCollection from \"./entities/collections/base.coffee\"\nimport BaseResponder from \"./entities/responders/base.coffee\"\nimport BaseViewModel from \"./entities/view-models/base.coffee\"\nimport BaseController from \"./controllers/base.coffee\"\nimport Application from \"./application.coffee\"\nimport Module from \"./module.coffee\"\n\n\nroot = typeof self == 'object' and self.self == self and self or typeof global == 'object' and global.global == global and global\n\n\nMarionettist.channels = new Channels()\n\nMarionettist.location = new Location()\n\nMarionettist.Module = Module\n\n# Mixins\n\nMarionettist.Mixins =\n  Collections: {}\n  Models: {}\n  Views: {}\n\n# Environment\nMarionettist.env = new Env()\n\n# Config\nMarionettist.config = new Config()\n\n# Logger\n\nMarionettist.logger = new Logger\n\n# Renderer\n\nMarionettist._.extend Marionettist.Renderer, Renderer\n\n# Utils\n\nMarionettist.utils = new Utils\n\n# Route\n\nMarionettist.AppRoute = AppRoute\n\n# Router\nMarionettist.AppRouter = AppRouter\n\n#  Region\n\nMarionettist._.extend Marionettist.Region::,Region::\n\n# Views\n\nMarionettist.Views = new Views()\n\nMarionettist._.extend Marionettist.View::,\n\n  templateContext: ->\n    helpers = Marionettist._.clone Marionettist.Views.templateHelpers\n    return helpers\n\n# views/base\n\nMarionettist.Views.Base = BaseView\n\n# views/collection\n\nMarionettist.Views.Collection = CollectionView\n\n\n# Entities\n\nMarionettist.Entities = new Marionettist.Object()\n\nMarionettist.Entities.Models = new Marionettist.Object()\n\nMarionettist.Entities.Collections = new Marionettist.Object()\n\nMarionettist.Entities.ViewModels = new Marionettist.Object()\n\nMarionettist.Entities.Responders = new Marionettist.Object()\n\n# entities/models/base\n\nMarionettist.Entities.Models.Base = BaseModel\n\n# entities/models/associated\nMarionettist.Entities.Models.Associated = BaseAssociatedModel\n\n# entities/collections/base\n\nMarionettist.Entities.Collections.Base = BaseCollection\n\n# entities/view-models/base\n\nMarionettist.Entities.Responders.Base = BaseResponder\n\n# entities/view-models/base\n\nMarionettist.Entities.ViewModels.Base = BaseViewModel\n\n# controllers/base\n\nMarionettist.Controllers = new Marionettist.Object()\n\nMarionettist.Controllers.Base = BaseController\n\nMarionettist.Application = Application\n\n\nglobal.Marionettist = Marionettist if global?\n\n\nexport default Marionettist\n"],"names":["Marionettist","extend","Templates","Base","BaseView","ModelBase","Channels","Location","Module","Env","Config","Logger","Renderer","Utils","AppRoute","AppRouter","Region","Views","CollectionView","Application"],"mappings":"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"}